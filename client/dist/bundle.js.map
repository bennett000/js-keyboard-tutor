{"version":3,"sources":["webpack:///./client/src/index.ts","webpack:///./client/src/containers/app.ts","webpack:///./client/src/controllers/pc-keyboard-controller.ts","webpack:///./client/src/actions/pc-keypress.ts","webpack:///./client/src/store/configure-store.ts","webpack:///./client/src/reducers/index.ts","webpack:///./client/src/reducers/pc-keyboard.ts"],"names":["App","App.constructor","App.ngOnInit","App.ngOnDestroy","PcKeyboardController","PcKeyboardController.constructor","PcKeyboardController.attach","PcKeyboardController.remove","PcKeyboardController.listener","pcKeypress","pcKeyboard"],"mappings":"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","file":"bundle.js","sourcesContent":["import 'reflect-metadata';\nimport {bootstrap}    from 'angular2/platform/browser';\nimport {App} from './containers/app';\nimport configureStore from './store/configure-store';\nimport {PcKeyboardController} from './controllers/pc-keyboard-controller';\n\n\nconst provider = <Function>require('ng2-redux').provider;\nconst store = configureStore();\n\nbootstrap(\n  App,\n  [\n    provider(store),\n    PcKeyboardController\n  ]\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/index.ts\n **/","import {Component, Inject} from 'angular2/core';\nimport {PcKeyboardController} from '../controllers/pc-keyboard-controller';\nimport {Store} from 'redux';\n\n@Component({\n  selector: 'keyboard-tutor',\n  template: `<h1 (keypress)=\"onKeyPress($event)\">Keyboard Tutor</h1>`\n})\nexport class App {\n  private unsubscribe: Function;\n  private store: Store<any>;\n\n  constructor(@Inject('ngRedux') ngRedux,\n              private pcKeyboardController: PcKeyboardController) {\n    this.store = ngRedux;\n  }\n\n  public ngOnInit() {\n    this.pcKeyboardController.attach();\n    this.unsubscribe = this.store.subscribe(() => {\n      console.log(this.store.getState());\n    });\n  }\n\n  public ngOnDestroy() {\n    this.pcKeyboardController.remove();\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/containers/app.ts\n **/","import {Inject, Injectable} from 'angular2/core';\nimport {pcKeypress} from '../actions/pc-keypress';\nimport {Store} from 'redux';\n\n/*global window */\n@Injectable()\nexport class PcKeyboardController {\n  private store: Store<any>;\n  constructor(@Inject('ngRedux') ngRedux) {\n    this.store = ngRedux;\n    this.attach();\n  }\n\n  public attach() {\n    window.addEventListener('keypress', this.listener.bind(this));\n  }\n\n  public remove() {\n    window.removeEventListener('keypress', this.listener.bind(this));\n  }\n\n  private listener(e: KeyboardEvent) {\n    this.store.dispatch(pcKeypress(e.charCode, +Date.now()));\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/controllers/pc-keyboard-controller.ts\n **/","export const PC_KEYPRESS = 'PC_KEYPRESS';\n\nexport function pcKeypress(charCode: number, timestamp: number) {\n  return {\n    payload: {\n      charCode,\n      timestamp\n    },\n    type: PC_KEYPRESS\n  };\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/actions/pc-keypress.ts\n **/","import {createStore, applyMiddleware, compose} from 'redux';\nconst thunk = require('redux-thunk');\nimport reducer from '../reducers/index';\n\nconst finalCreateStore = compose(\n  applyMiddleware(thunk)\n)(createStore);\n\nexport default () => {\n  return finalCreateStore(reducer);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/store/configure-store.ts\n **/","import {combineReducers} from 'redux';\nimport {pcKeyboard} from './pc-keyboard';\n\nexport default combineReducers<any>({\n  pcKeyboard\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/reducers/index.ts\n **/","import { PC_KEYPRESS } from '../actions/pc-keypress';\nconst immutable = require('immutable');\nconst List = immutable.List;\n\nexport function pcKeyboard(state = List(), action) {\n  switch (action.type) {\n    case PC_KEYPRESS:\n      return state.push(action.payload.charCode);\n    default:\n      return state;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/reducers/pc-keyboard.ts\n **/"],"sourceRoot":""}