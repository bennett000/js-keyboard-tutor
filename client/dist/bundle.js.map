{"version":3,"sources":["webpack:///./client/src/index.ts","webpack:///./client/src/containers/app.ts","webpack:///./client/src/controllers/pc-keyboard-controller.ts","webpack:///./client/src/store/configure-store.ts","webpack:///./client/src/reducers/index.ts","webpack:///./client/src/reducers/pc-keyboard.ts","webpack:///./client/src/actions/pc-keypress.ts"],"names":["App","App.constructor","App.ngOnInit","App.ngOnDestroy","PcKeyboardController","PcKeyboardController.constructor","PcKeyboardController.attach","PcKeyboardController.remove","PcKeyboardController.listener","pcKeyboard","pcKeypress"],"mappings":"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","file":"bundle.js","sourcesContent":["import 'reflect-metadata';\nimport {bootstrap}    from 'angular2/platform/browser';\nimport {App} from './containers/app';\nimport configureStore from './store/configure-store';\n\n\nconst provider = <Function>require('ng2-redux').provider;\nconst store = configureStore();\n\nbootstrap(\n  App,\n  [\n    provider(store)\n  ]\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/index.ts\n **/","import {Component} from 'angular2/core';\nimport {PcKeyboardController} from '../controllers/pc-keyboard-controller';\n\n@Component({\n  selector: 'keyboard-tutor',\n  template: `<h1 (keypress)=\"onKeyPress($event)\">Keyboard Tutor</h1>`\n})\nexport class App {\n  protected pcKeyboardController: PcKeyboardController;\n  constructor() { // private pcKeyboard: PcKeyboardListeningController) {\n    console.log('helloy');\n  }\n\n  public ngOnInit() {\n    if (this.pcKeyboardController) {\n      this.pcKeyboardController.remove();\n    }\n    this.pcKeyboardController = PcKeyboardController.create();\n  }\n\n  public ngOnDestroy() {\n    this.pcKeyboardController.remove();\n    this.pcKeyboardController = null;\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/containers/app.ts\n **/","/*global window */\nexport class PcKeyboardController {\n  public static create = () => {\n    return new PcKeyboardController();\n  };\n\n  protected pcKeyboard: Function;\n\n  constructor() {\n    this.attach();\n  }\n\n  public attach() {\n    window.addEventListener('keypress', this.listener.bind(this));\n  }\n\n  public remove() {\n    window.removeEventListener('keypress', this.listener.bind(this));\n  }\n\n  private listener(e: KeyboardEvent) {\n    console.log('ahhh', e);\n    this.pcKeyboard();\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/controllers/pc-keyboard-controller.ts\n **/","import {createStore, applyMiddleware, compose} from 'redux';\nconst thunk = require('redux-thunk');\nimport reducer from '../reducers/index';\n\nconst finalCreateStore = compose(\n  applyMiddleware(thunk)\n)(createStore);\n\nexport default () => {\n  return finalCreateStore(reducer);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/store/configure-store.ts\n **/","import {combineReducers} from 'redux';\nimport {pcKeyboard} from './pc-keyboard';\n\nexport default  combineReducers({\n  pcKeyboard\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/reducers/index.ts\n **/","import { PC_KEYPRESS } from '../actions/pc-keypress';\nconst immutable = require('immutable');\nconst List = immutable.List;\n\nexport function pcKeyboard(state = List(), action) {\n  switch (action.type) {\n    case PC_KEYPRESS:\n      return state.push(action.keypress);\n    default:\n      return state;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/reducers/pc-keyboard.ts\n **/","export const PC_KEYPRESS = 'PC_KEYPRESS';\n\nexport function pcKeypress() {\n  return {\n    type: PC_KEYPRESS\n  };\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./client/src/actions/pc-keypress.ts\n **/"],"sourceRoot":""}